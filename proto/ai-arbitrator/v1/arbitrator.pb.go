// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: ai-arbitrator/v1/arbitrator.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Defines the data structure for a single chat message
type ChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderId      string                 `protobuf:"bytes,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_ai_arbitrator_v1_arbitrator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ai_arbitrator_v1_arbitrator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_ai_arbitrator_v1_arbitrator_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessage) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *ChatMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// Defines the data structure for the AI mediation request
type MediationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EscrowId      string                 `protobuf:"bytes,1,opt,name=escrow_id,json=escrowId,proto3" json:"escrow_id,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Chat          []*ChatMessage         `protobuf:"bytes,4,rep,name=chat,proto3" json:"chat,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediationRequest) Reset() {
	*x = MediationRequest{}
	mi := &file_ai_arbitrator_v1_arbitrator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediationRequest) ProtoMessage() {}

func (x *MediationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_arbitrator_v1_arbitrator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediationRequest.ProtoReflect.Descriptor instead.
func (*MediationRequest) Descriptor() ([]byte, []int) {
	return file_ai_arbitrator_v1_arbitrator_proto_rawDescGZIP(), []int{1}
}

func (x *MediationRequest) GetEscrowId() string {
	if x != nil {
		return x.EscrowId
	}
	return ""
}

func (x *MediationRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MediationRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MediationRequest) GetChat() []*ChatMessage {
	if x != nil {
		return x.Chat
	}
	return nil
}

// Defines the data structure for the AI decision request
type DecisionRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	EscrowId    string                 `protobuf:"bytes,1,opt,name=escrow_id,json=escrowId,proto3" json:"escrow_id,omitempty"`
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Status      string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Amount      float32                `protobuf:"fixed32,4,opt,name=amount,proto3" json:"amount,omitempty"`
	BuyerId     string                 `protobuf:"bytes,5,opt,name=buyer_id,json=buyerId,proto3" json:"buyer_id,omitempty"`
	SellerId    string                 `protobuf:"bytes,6,opt,name=seller_id,json=sellerId,proto3" json:"seller_id,omitempty"`
	Chat        []*ChatMessage         `protobuf:"bytes,7,rep,name=chat,proto3" json:"chat,omitempty"`
	// disputeConditions are complex and best handled as a JSON string for flexibility
	DisputeConditionsJson string `protobuf:"bytes,8,opt,name=dispute_conditions_json,json=disputeConditionsJson,proto3" json:"dispute_conditions_json,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *DecisionRequest) Reset() {
	*x = DecisionRequest{}
	mi := &file_ai_arbitrator_v1_arbitrator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecisionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecisionRequest) ProtoMessage() {}

func (x *DecisionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_arbitrator_v1_arbitrator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecisionRequest.ProtoReflect.Descriptor instead.
func (*DecisionRequest) Descriptor() ([]byte, []int) {
	return file_ai_arbitrator_v1_arbitrator_proto_rawDescGZIP(), []int{2}
}

func (x *DecisionRequest) GetEscrowId() string {
	if x != nil {
		return x.EscrowId
	}
	return ""
}

func (x *DecisionRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DecisionRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DecisionRequest) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *DecisionRequest) GetBuyerId() string {
	if x != nil {
		return x.BuyerId
	}
	return ""
}

func (x *DecisionRequest) GetSellerId() string {
	if x != nil {
		return x.SellerId
	}
	return ""
}

func (x *DecisionRequest) GetChat() []*ChatMessage {
	if x != nil {
		return x.Chat
	}
	return nil
}

func (x *DecisionRequest) GetDisputeConditionsJson() string {
	if x != nil {
		return x.DisputeConditionsJson
	}
	return ""
}

// Defines the data structure for the AI mediation response
type MediationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediationResponse) Reset() {
	*x = MediationResponse{}
	mi := &file_ai_arbitrator_v1_arbitrator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediationResponse) ProtoMessage() {}

func (x *MediationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_arbitrator_v1_arbitrator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediationResponse.ProtoReflect.Descriptor instead.
func (*MediationResponse) Descriptor() ([]byte, []int) {
	return file_ai_arbitrator_v1_arbitrator_proto_rawDescGZIP(), []int{3}
}

func (x *MediationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Defines the data structure for the AI decision response
type DecisionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Decision      string                 `protobuf:"bytes,1,opt,name=decision,proto3" json:"decision,omitempty"`
	Justification string                 `protobuf:"bytes,2,opt,name=justification,proto3" json:"justification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DecisionResponse) Reset() {
	*x = DecisionResponse{}
	mi := &file_ai_arbitrator_v1_arbitrator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DecisionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecisionResponse) ProtoMessage() {}

func (x *DecisionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_arbitrator_v1_arbitrator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecisionResponse.ProtoReflect.Descriptor instead.
func (*DecisionResponse) Descriptor() ([]byte, []int) {
	return file_ai_arbitrator_v1_arbitrator_proto_rawDescGZIP(), []int{4}
}

func (x *DecisionResponse) GetDecision() string {
	if x != nil {
		return x.Decision
	}
	return ""
}

func (x *DecisionResponse) GetJustification() string {
	if x != nil {
		return x.Justification
	}
	return ""
}

var File_ai_arbitrator_v1_arbitrator_proto protoreflect.FileDescriptor

const file_ai_arbitrator_v1_arbitrator_proto_rawDesc = "" +
	"\n" +
	"!ai-arbitrator/v1/arbitrator.proto\x12\x10ai_arbitrator.v1\">\n" +
	"\vChatMessage\x12\x1b\n" +
	"\tsender_id\x18\x01 \x01(\tR\bsenderId\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\"\x9c\x01\n" +
	"\x10MediationRequest\x12\x1b\n" +
	"\tescrow_id\x18\x01 \x01(\tR\bescrowId\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x121\n" +
	"\x04chat\x18\x04 \x03(\v2\x1d.ai_arbitrator.v1.ChatMessageR\x04chat\"\xa3\x02\n" +
	"\x0fDecisionRequest\x12\x1b\n" +
	"\tescrow_id\x18\x01 \x01(\tR\bescrowId\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\x02R\x06amount\x12\x19\n" +
	"\bbuyer_id\x18\x05 \x01(\tR\abuyerId\x12\x1b\n" +
	"\tseller_id\x18\x06 \x01(\tR\bsellerId\x121\n" +
	"\x04chat\x18\a \x03(\v2\x1d.ai_arbitrator.v1.ChatMessageR\x04chat\x126\n" +
	"\x17dispute_conditions_json\x18\b \x01(\tR\x15disputeConditionsJson\"-\n" +
	"\x11MediationResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"T\n" +
	"\x10DecisionResponse\x12\x1a\n" +
	"\bdecision\x18\x01 \x01(\tR\bdecision\x12$\n" +
	"\rjustification\x18\x02 \x01(\tR\rjustification2\xc5\x01\n" +
	"\fAIArbitrator\x12[\n" +
	"\x10RequestMediation\x12\".ai_arbitrator.v1.MediationRequest\x1a#.ai_arbitrator.v1.MediationResponse\x12X\n" +
	"\x0fRequestDecision\x12!.ai_arbitrator.v1.DecisionRequest\x1a\".ai_arbitrator.v1.DecisionResponseB,Z*github.com/SafeDeal/proto/ai-arbitrator/v1b\x06proto3"

var (
	file_ai_arbitrator_v1_arbitrator_proto_rawDescOnce sync.Once
	file_ai_arbitrator_v1_arbitrator_proto_rawDescData []byte
)

func file_ai_arbitrator_v1_arbitrator_proto_rawDescGZIP() []byte {
	file_ai_arbitrator_v1_arbitrator_proto_rawDescOnce.Do(func() {
		file_ai_arbitrator_v1_arbitrator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ai_arbitrator_v1_arbitrator_proto_rawDesc), len(file_ai_arbitrator_v1_arbitrator_proto_rawDesc)))
	})
	return file_ai_arbitrator_v1_arbitrator_proto_rawDescData
}

var file_ai_arbitrator_v1_arbitrator_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_ai_arbitrator_v1_arbitrator_proto_goTypes = []any{
	(*ChatMessage)(nil),       // 0: ai_arbitrator.v1.ChatMessage
	(*MediationRequest)(nil),  // 1: ai_arbitrator.v1.MediationRequest
	(*DecisionRequest)(nil),   // 2: ai_arbitrator.v1.DecisionRequest
	(*MediationResponse)(nil), // 3: ai_arbitrator.v1.MediationResponse
	(*DecisionResponse)(nil),  // 4: ai_arbitrator.v1.DecisionResponse
}
var file_ai_arbitrator_v1_arbitrator_proto_depIdxs = []int32{
	0, // 0: ai_arbitrator.v1.MediationRequest.chat:type_name -> ai_arbitrator.v1.ChatMessage
	0, // 1: ai_arbitrator.v1.DecisionRequest.chat:type_name -> ai_arbitrator.v1.ChatMessage
	1, // 2: ai_arbitrator.v1.AIArbitrator.RequestMediation:input_type -> ai_arbitrator.v1.MediationRequest
	2, // 3: ai_arbitrator.v1.AIArbitrator.RequestDecision:input_type -> ai_arbitrator.v1.DecisionRequest
	3, // 4: ai_arbitrator.v1.AIArbitrator.RequestMediation:output_type -> ai_arbitrator.v1.MediationResponse
	4, // 5: ai_arbitrator.v1.AIArbitrator.RequestDecision:output_type -> ai_arbitrator.v1.DecisionResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_ai_arbitrator_v1_arbitrator_proto_init() }
func file_ai_arbitrator_v1_arbitrator_proto_init() {
	if File_ai_arbitrator_v1_arbitrator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ai_arbitrator_v1_arbitrator_proto_rawDesc), len(file_ai_arbitrator_v1_arbitrator_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ai_arbitrator_v1_arbitrator_proto_goTypes,
		DependencyIndexes: file_ai_arbitrator_v1_arbitrator_proto_depIdxs,
		MessageInfos:      file_ai_arbitrator_v1_arbitrator_proto_msgTypes,
	}.Build()
	File_ai_arbitrator_v1_arbitrator_proto = out.File
	file_ai_arbitrator_v1_arbitrator_proto_goTypes = nil
	file_ai_arbitrator_v1_arbitrator_proto_depIdxs = nil
}
